{"componentChunkName":"component---src-pages-archive-js","path":"/archive/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"date":"2023-10-20","title":"Auto conversion script for Diamond Pattern","tech":["Javascript","Parsing","AST","Solidity"],"github":"","external":"","company":"DASH Lab"},"html":"<p>Creation of an auto conversion script that parses the solidity AST to auto convert a normal contract to a Diamond Pattern Contract.</p>"}},{"node":{"frontmatter":{"date":"2023-08-01","title":"Distributed Scheduler","tech":["Python","Zero MQ","Django","Docker","Serverless","Distributed Computing"],"github":"https://github.com/DaSH-Lab-CSIS/Serverless_Scheduler","external":"https://github.com/DaSH-Lab-CSIS/Serverless_Scheduler","company":"DASH Lab"},"html":"<p>Created a distributed scheduler, that uses latent CPU power of personal computers and schedulers functions on it. Zero MQ was used to create a connected network.</p>"}},{"node":{"frontmatter":{"date":"2023-07-01","title":"TA allocation","tech":["NodeJs","ExpressJS","Google Sheets API","ReactJS","SQL"],"github":"","external":"","company":"CSIS"},"html":"<p>Created an effecient allocation and selection algorithm with interface for TA and Course Allocations for BITS Goa, Computer Science Department.</p>"}},{"node":{"frontmatter":{"date":"2023-04-01","title":"Simple LLVM based Lang","tech":["Flex","Bison","LLVM","C++","YACC"],"github":"https://github.com/pranayvarshney/CC_G31","external":"https://github.com/pranayvarshney/CC_G31","company":"BITS Goa"},"html":"<p>Created a very simple LLVM IR based language with simple constructs such as for loop, if statement, declarations and header protectors.</p>"}},{"node":{"frontmatter":{"date":"2022-10-01","title":"An implementation of the CSCAN disk algorithm ","tech":["Python","Algorithm","Disk Scheduling"],"github":"https://github.com/pranayvarshney/DSTN/tree/main/Disk_Scheduler","external":"https://github.com/pranayvarshney/DSTN/tree/main/Disk_Scheduler","company":"BITS Goa"},"html":"<p>Implemented CSCAN algorithm for efficient track reads using python.</p>"}}]}},"pageContext":{}},"staticQueryHashes":["1994492073","2009693873","2031412112","3825832676"]}